@using TaskProject.Domain.Category

@{
    ViewData["Title"] = "Category List";
}
<h5>Product Category List</h5>
<div class="row mb-2">
    <form id="form-search" class="col-md-12">
        <input type="hidden" id="hidcurrentindexemp" value="0" name="PageIndex" />
        <input type="hidden" id="hidemppagesize" name="PageSize" value="10" />
        <input type="hidden" id="hiddenTotalRecord" value="" />
        <input type="hidden" id="SortColumn" name="SortColumn" value="title" />
        <input type="hidden" id="SortOrder" name="SortOrder" value="asc" />

        <div class="row">
            <div class="col-md-4">
                <input type="text" name="Search" class="form-control" placeholder="Search Categories..." />
            </div>
            <div class="col-md-3">
                <select class="form-select" id="IsActive" name="IsActive">
                    <option value="null">All</option>
                    <option value="1" selected="selected">Active</option>
                    <option value="0">Inactive</option>
                </select>
            </div>
            <div class="col-md-2">
                <button type="button" class="btn btn-primary" id="btnsearch">
                    <i class="fa fa-search"></i> Search
                </button>
            </div>
            <div class="col-md-3 text-end">
                <a href="@Url.Action("NewCategory","Category")" class="btn btn-success" id="openCreateModal">
                    <i class="fa fa-plus"></i> Add New Category
                </a>
            </div>
        </div>
    </form>
</div>
<div class="row mb-0">
    <div class="col-md-12">
        <table id="categoriesTable" class="table table-striped table-bordered">
            <thead>
                <tr>
                    <th scope="col">SrNo</th>
                    <th id="titleHeader" class="sortable">
                        <a href="javascript:void(0);" onclick="sortTable('title')">
                            Title
                        </a>
                        <span class="sort-arrow"></span>
                    </th>
                    <th id="descriptionHeader" class="sortable">
                        <a href="javascript:void(0);" onclick="sortTable('description')">
                            Description
                        </a>
                        <span class="sort-arrow"></span>
                    </th>
                    <th id="statusHeader" class="sortable">
                        <a href="javascript:void(0);" onclick="sortTable('isActive')">
                            Status
                        </a>
                        <span class="sort-arrow"></span>
                    </th>
                    <th scope="col">Action</th>
                </tr>
            </thead>
            <tbody>
            </tbody>
        </table>
    </div>
</div>
<div class="row">
    <div class="col-sm-6" id="div-pageinfo">
    </div>
    <div class="col-sm-6" style="text-align:right">
        <div id="div-pages">
        </div>
    </div>
</div>

<div class="modal fade" id="modal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content" id="modalContent">
        </div>
    </div>
</div>

@section scripts {
    <script>
        $('form').submit(function (e) {
            e.preventDefault();
        });
        $('form').keypress(function (e) {
            if (e.keyCode == 13) {
                getCategoryList();
                return;
            }
        });

        $(document).ready(function () {
            getCategoryList();
        });

        $("#btnsearch").click(function () {
            $("#hidcurrentindexemp").val(0);
            getCategoryList();
        });

        function getCategoryList() {
            var valdata = $("#form-search").serialize();
            $.ajax({
                url: "/Category/List",
                type: "POST",
                dataType: 'json',
                data: valdata,
                async: true,
                success: function (response) {
                    var TotalRecord = 0;
                    if (response.data.length > 0) {
                        TotalRecord = response.data[0].totalRecord;
                    }
                    $('#hiddenTotalRecord').val(TotalRecord);
                    var grid = '';
                    if (TotalRecord === 0) {
                        grid += '<tr><td colspan="4" style="text-align:center"><div class="NotFound"><i class="fa fa-recycle"></i><strong>No Records Found.</strong></div></td></tr>';
                        $('#div-pageinfo').html('');
                        $('#categoriesTable tbody').html(grid);
                    } else {
                        var tableBody = $('#categoriesTable tbody');
                        tableBody.empty();
                        $.each(response.data, function (index, item) {
                            var row = $('<tr></tr>');
                            row.append('<td>' + item.srNo + '</td>');
                            row.append('<td>' + (item.title ? item.title : 'N/A') + '</td>');
                            row.append('<td>' + item.description + '</td>');
                            row.append('<td><span class="badge ' + (item.isActive ? 'bg-success' : 'bg-danger') + '">' + (item.isActive ? 'Active' : 'Inactive') + '</span></td>');
                            row.append('<td><button class="btn btn-primary btn-sm" onclick="edit(' + item.categoryId + ')"><i class="fa fa-pencil" style="cursor:pointer;"></i></button> |<button class="btn btn-danger btn-sm" onclick="deleteCategory(' + item.categoryId + ')"> <i class="fa fa-trash" style="cursor:pointer;"></i></button> </td>');
                            tableBody.append(row);
                        });
                    }
                    Pagination($('#hiddenTotalRecord').val(), $("#hidcurrentindexemp").val(), $("#hidemppagesize").val(), "#qemp", "qemp", '', '');
                },
                error: function (xhr, textStatus, errorThrown) {
                    alert('Please try again!', "error");
                },
                complete: function (xhr, textStatus) {
                    updateSortArrow($('#SortOrder').val(), $('#SortColumn').val());
                }
            });
        }

        function Search(pagenumber) {
            $("#hidcurrentindexemp").val(pagenumber);
            getCategoryList();
        }

        function addNewCategory(Id) {
            openCreateOrEditModal();
        }

        function edit(categoryId) {
            window.location.href = '/Category/EditCategory/' + categoryId;
        }

        function deleteCategory(categoryId) {
            if (confirm('Are you sure you want to delete this category?')) {
               deleteCat(categoryId);
            }
        }

        function sortTable(column) {
            debugger;
            var currentSortOrder = $('#SortOrder').val();
            var currentSortColumn = column;

            if (currentSortColumn === column) {
                currentSortOrder = currentSortOrder === 'asc' ? 'desc' : 'asc';
            } else {
                currentSortColumn = column;
                currentSortOrder = 'asc';
            }
            $('#SortOrder').val(currentSortOrder);
            $('#SortColumn').val(currentSortColumn);

            getCategoryList();
        }

        function updateSortArrow(order, column) {
            $('.sort-arrow').html('');
            $('th').removeClass('sorted');
            var icon = order === 'asc' ? '<i class="fa fa-arrow-up"></i>' : '<i class="fa fa-arrow-down"></i>';
            $('#' + column + 'Header').addClass('sorted').find('.sort-arrow').html(icon);
        }

          function deleteCat(id) {
            $.ajax({
                type: 'POST',
                dataType: 'JSON',
                url: '/Category/Delete',
                data: { CategoryID: id },
                success: function (response) {
                    if (response == "Success") {
                        $('#txt-pgno').val(0);
                        alert("category deleted successfully");
                        getCategoryList();
                    }
                    else {
                        alert("Error while deleting data");
                    }
                },
                error: function () {
                    alert("Error while deleting data");
                }
            });
        }

    </script>
}
